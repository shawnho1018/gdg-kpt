apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata: # kpt-merge: /disallowroot
  name: disallowroot
  annotations:
    internal.kpt.dev/upstream-identifier: 'templates.gatekeeper.sh|ConstraintTemplate|default|disallowroot'
spec:
  crd:
    spec:
      names:
        kind: DisallowRoot
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |-
        package disallowroot
        violation[{"msg": msg}] {
          not input.review.object.spec.template.spec.securityContext.runAsNonRoot
          msg := "Containers must not run as root"
        }
---
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: DisallowRoot
metadata: # kpt-merge: /disallowroot
  name: disallowroot
  annotations:
    internal.kpt.dev/upstream-identifier: 'constraints.gatekeeper.sh|DisallowRoot|default|disallowroot'
spec:
  match:
    kinds:
      - apiGroups:
          - 'apps'
        kinds:
          - Deployment
---
# apiVersion: templates.gatekeeper.sh/v1
# kind: ConstraintTemplate
# metadata: # kpt-merge: /k8sbannedconfigmapkeysv1
#   name: k8sbannedconfigmapkeysv1
#   annotations:
#     internal.kpt.dev/upstream-identifier: 'templates.gatekeeper.sh|ConstraintTemplate|default|k8sbannedconfigmapkeysv1'
# spec:
#   crd:
#     spec:
#       names:
#         kind: K8sBannedConfigMapKeysV1
#   targets:
#     - target: admission.k8s.gatekeeper.sh
#       rego: |-
#         package ban_keys
#         violation[{"msg": sprintf("%v", [val])}] {
#           keys = {key | input.review.object.data[key]}
#           banned = {key | input.parameters.keys[_] = key}
#           overlap = keys & banned
#           count(overlap) > 0
#           val := sprintf("The following banned keys are being used in the ConfigMap: %v", [overlap])
#         }
# ---
# apiVersion: constraints.gatekeeper.sh/v1beta1
# kind: K8sBannedConfigMapKeysV1
# metadata: # kpt-merge: /no-secrets-in-configmap
#   name: no-secrets-in-configmap
#   annotations:
#     internal.kpt.dev/upstream-identifier: 'constraints.gatekeeper.sh|K8sBannedConfigMapKeysV1|default|no-secrets-in-configmap'
# spec:
#   match:
#     kinds:
#       - apiGroups:
#           - ''
#         kinds:
#           - ConfigMap
#   parameters:
#     keys:
#       - private_key
